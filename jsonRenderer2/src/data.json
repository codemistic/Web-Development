{
    "engine_name" : "Bank Marketing Campaign Engine",
    "template": 
    [
        {
            "type" : "section",
            "heading": "Engine Description",
            "top_text": "This engine is a classification engine that uses a select combination of Ai and machine learning approaches to predict the likelihood of the target variable being one value versus another (yes/no, true/false, 1/0, etc.). This can be used to analyze data with respect to a particular business question and build an answer model that is then used to answer the business question for a given set of the data going forward.",
            "bottom_text" : "",
            "images" : [
                {
                    "image_title" : "Base64 Encoding And Decoding",
                    "image_name" : "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",
                    "image_description": "Hi Hello",
                    "height" : "100%",
                    "width" : "100%"
                }
            ]
        },
        {
            "type" : "section",
            "heading": "Input Data Requirements/Guidance",
            "top_text": "The input data to this engine should be in tabular Excel, CSV or TSV format. Basically it should look like a spreadsheet. It should consist of a number of independent variable columns and one dependent variable column. The dependent variable column will be the businesss question you are trying to predict the answer to (e.g. Buy CD - Will the customer buy a CD?). The independent variable columns would be various information related to the dependent variable that you believe influence the outcome of the dependent variable. The better the independent variables information impact/influence the dependent variable, the better the resultant model and predictions/answers to your question/issue will be. **One of the keys to a great model and good predictions results with any of the AI engines is a good data input file (as many samples as possible, good dependent variables, good quality data, and no missing values).Please see the example variables set below. \n \nExample Data Types and Variables for example dataset \n 1 - age \n 2 - job : type of job \n 3 - marital: marital status \n 4 - education \n 5 - default: has credit in default? \n 6 - housing: has housing loan? \n 7 - loan: has personal loan? \n 8 - balance in account \n 9 - contact: contact communication type \n 10 - month: last contact month of year \n 11 - day: last contact day of the month \n 12 - duration: last contact duration, in seconds \n 13 - campaign: number of current campaign contacts for client \n 14 - pdays: number of days since last client contact from a previous campaign \n 15 - previous: number of contacts performed before this campaign and for this client \n 16 - poutcome: outcome of the previous marketing campaign \n 17 - Output variable (Target): has the client subscribed a term deposit?",
            "bottom_text" : "",
            "images" : []
            
        },
        {
            "type" : "section",
            "heading": "Data Quality Checks",
            "top_text": "No of null values per column is shown below",
            "bottom_text" : "",
            "images" : [
                {
                "image_title" : "",
                "image_name" : "http://66.29.147.117:5000/nuwebapp/api/v1/uploads/engine/MainEngine/static/dataframe.png",
                "image_description": "Hi Hello",
                "height" : "100%",
                "width" : "100%"
            } 
        ],
        "table": "https://gist.githubusercontent.com/rnirmal/e01acfdaf54a6f9b24e91ba4cae63518/raw/6b589a5c5a851711e20c5eb28f9d54742d1fe2dc/datasets.csv"
        },
      
        {
            "type" : "section",
            "heading": "Univariate Analysis",
            "top_text": "So what is univariate analysis? Univariate analysis is a basic kind of analysis technique for statistical data. Here the data contains just one variable and does not have to deal with the relationship of a cause and effect. Like for example consider a survey of a classroom. The analysts would want to count the number of boys and girls in the room. The data here simply talks about the number which is a single variable and the variable quantity. The main objective of the univariate analysis is to describe the data in order to find out the patterns in the data. This is done by looking at the mean, mode, median, standard deviation, dispersion, etc. \n Univariate analysis is basically the simplest form to analyze data. Uni means one and this means that the data has only one kind of variable. The major reason for univariate analysis is to use the data to describe. The analysis will take data, summarise it, and then find some pattern in the data. \n A variable is simply a condition or subset of your data in univariate analysis. It can be thought of as a “category.” For example, the analysis could look at a variable such as “age,” or it can look at “height,” or “weight.” However, it does not examine more than one variable at a time, nor would it look at their relationship. The analysis of two variables and their relationship is termed bivariate analysis. If three or more variables are considered simultaneously, it is multivariate analysis.",
            "bottom_text" : "",
            "images" : 
            [
                {"image_title": "Analysis for column age",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/age_None.png",
                "image_description": "So what is univariate analysis? Univariate analysis is a basic kind of"},
               {"image_title": "Analysis for column education",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/education_None.png",
                "image_description": "Some Information about image"},
               {"image_title": "Analysis for column default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/default_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column balance",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/balance_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column housing",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/housing_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column loan",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/loan_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column contact",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/contact_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column day",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/day_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column month",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/month_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column duration",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/duration_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column campaign",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/campaign_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column pdays",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/pdays_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column previous",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/previous_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column poutcome",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/poutcome_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column deposit",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/deposit_None.png",
                "image_description": ""},
                {"image_title": "Analysis for column marital",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/marital_None.png",
                "image_description": ""},
                {"image_title": "Analysis for column job",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/job_None.png",
                "image_description": "",
                "height" : "100%",
                "width" : "100%"
            }
            ],
            "table": "https://gist.githubusercontent.com/rnirmal/e01acfdaf54a6f9b24e91ba4cae63518/raw/6b589a5c5a851711e20c5eb28f9d54742d1fe2dc/datasets.csv"
        },
        {
            "type" : "section",
            "heading": "",
            "top_text": "So what is univariate analysis? Univariate analysis is a basic kind of analysis technique for statistical data. Here the data contains just one variable and does not have to deal with the relationship of a cause and effect. Like for example consider a survey of a classroom. The analysts would want to count the number of boys and girls in the room. The data here simply talks about the number which is a single variable and the variable quantity. The main objective of the univariate analysis is to describe the data in order to find out the patterns in the data. This is done by looking at the mean, mode, median, standard deviation, dispersion, etc. \n Univariate analysis is basically the simplest form to analyze data. Uni means one and this means that the data has only one kind of variable. The major reason for univariate analysis is to use the data to describe. The analysis will take data, summarise it, and then find some pattern in the data. \n A variable is simply a condition or subset of your data in univariate analysis. It can be thought of as a “category.” For example, the analysis could look at a variable such as “age,” or it can look at “height,” or “weight.” However, it does not examine more than one variable at a time, nor would it look at their relationship. The analysis of two variables and their relationship is termed bivariate analysis. If three or more variables are considered simultaneously, it is multivariate analysis.",
            "bottom_text" : "",
            "images" : 
            [
                {"image_title": "Analysis for column age",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/age_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column education",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/education_None.png",
                "image_description": "Some Information about image"},
               {"image_title": "Analysis for column default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/default_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column balance",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/balance_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column housing",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/housing_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column loan",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/loan_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column contact",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/contact_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column day",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/day_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column month",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/month_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column duration",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/duration_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column campaign",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/campaign_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column pdays",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/pdays_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column previous",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/previous_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column poutcome",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/poutcome_None.png",
                "image_description": ""},
               {"image_title": "Analysis for column deposit",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/deposit_None.png",
                "image_description": ""},
                {"image_title": "Analysis for column marital",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/marital_None.png",
                "image_description": ""},
                {"image_title": "Analysis for column job",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/job_None.png",
                "image_description": "",
                "height" : "100%",
                "width" : "100%"
            }
            ],
            "table": "https://gist.githubusercontent.com/rnirmal/e01acfdaf54a6f9b24e91ba4cae63518/raw/6b589a5c5a851711e20c5eb28f9d54742d1fe2dc/datasets.csv"
        },
        {
            "type" : "section",
            "heading": "Multivariate Analysis",
            "top_text": "Multivariate analysis is used to study more complex sets of data than what univariate analysis methods can handle. This type of analysis is almost always performed with software (i.e. SPSS or SAS), as working with even the smallest of data sets can be overwhelming by hand. \n Multivariate analysis can reduce the likelihood of Type I errors. Sometimes, univariate analysis is preferred as multivariate techniques can result in difficulty interpreting the results of the test. For example, group differences on a linear combination of dependent variables in MANOVA can be unclear. In addition, multivariate analysis is usually unsuitable for small sets of data.",
            "bottom_text" : "",
            "images" : 
            [
                {"image_title": "age vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_age_default.png",
                "image_description": ""},
               {"image_title": "job vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_job_default.png",
                "image_description": ""},
               {"image_title": "marital vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_marital_default.png",
                "image_description": ""},
               {"image_title": "education vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_education_default.png",
                "image_description": ""},
               {"image_title": "default vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_default_default.png",
                "image_description": ""},
               {"image_title": "balance vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_balance_default.png",
                "image_description": ""},
               {"image_title": "housing vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_housing_default.png",
                "image_description": ""},
               {"image_title": "loan vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_loan_default.png",
                "image_description": ""},
               {"image_title": "contact vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_contact_default.png",
                "image_description": ""},
               {"image_title": "day vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_day_default.png",
                "image_description": ""},
               {"image_title": "month vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_month_default.png",
                "image_description": ""},
               {"image_title": "duration vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_duration_default.png",
                "image_description": ""},
               {"image_title": "campaign vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_campaign_default.png",
                "image_description": ""},
               {"image_title": "pdays vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_pdays_default.png",
                "image_description": ""},
               {"image_title": "previous vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_previous_default.png",
                "image_description": ""},
               {"image_title": "poutcome vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_poutcome_default.png",
                "image_description": ""},
               {"image_title": "deposit vs default",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/multivariate_deposit_default.png",
                "image_description": ""}],
                "table": "https://gist.githubusercontent.com/rnirmal/e01acfdaf54a6f9b24e91ba4cae63518/raw/6b589a5c5a851711e20c5eb28f9d54742d1fe2dc/datasets.csv"
        },
        {
            "type" : "section",
            "heading": "",
            "top_text": "Plot pairwise relationships in a dataset. \n By default, this function will create a grid of Axes such that each numeric variable in data will by shared across the y-axes across a single row and the x-axes across a single column. The diagonal plots are treated differently: a univariate distribution plot is drawn to show the marginal distribution of the data in each column. \n It is also possible to show a subset of variables or plot different variables on the rows and columns. \n This is a high-level interface for PairGrid that is intended to make it easy to draw a few common styles. You should use PairGrid directly if you need more flexibility.",
            "bottom_text" : "",
            "images" : 
            [
                {"image_title": "Pairplot ",
                "image_name": "https://raw.githubusercontent.com/ermohit1897/EngineCloud/main/paitplot.png",
                "image_description": "",
                "height" : "100%",
                "width" : "100%"
            }
               ],
               "table": "https://gist.githubusercontent.com/rnirmal/e01acfdaf54a6f9b24e91ba4cae63518/raw/6b589a5c5a851711e20c5eb28f9d54742d1fe2dc/datasets.csv"
        }
    ]
  }