{"version":3,"sources":["media/ok.png","components/header/index.js","firebase.js","components/sidebar/NewFile.js","components/sidebar/SidebarItem.js","components/sidebar/index.js","components/filesView/FileItem.js","components/filesView/FileCard.js","components/filesView/FilesView.js","App.js","reportWebVitals.js","index.js"],"names":["index","userPhoto","className","src","GDriveLogo","alt","type","placeholder","firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","storage","db","firestore","database","ref","set","name","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","NewFile","classes","useState","modalStyle","open","setOpen","file","setFile","uploading","setUploading","onClick","fontSize","Modal","onClose","aria-labelledby","aria-describedby","style","onChange","e","target","files","alert","put","then","snapshot","console","log","child","getDownloadURL","url","collection","add","timestamp","FieldValue","serverTimestamp","caption","fileUrl","size","_delegate","bytesTransferred","getMetadata","meta","SidebarItem","arrow","icon","label","monthNames","FileItem","id","fileDate","toDate","getDate","getMonth","getFullYear","href","download","FileSaver","saveAs","process","fileSizeInBytes","i","Math","max","toFixed","getReadableFileSizeString","FileCard","FilesView","setFiles","useEffect","onSnapshot","docs","map","doc","item","data","slice","App","user","setUser","photoURL","DriveLogo","signOut","catch","err","message","signInWithPopup","result","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db381de9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ok.ad8636ea.png\";","import React from 'react'\r\nimport '../../styles/Header.css'\r\n\r\nimport GDriveLogo from '../../media/ok.png'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n\r\nconst index = ({ userPhoto }) => {\r\n    return (\r\n        <div className='header'>\r\n            <div className=\"header__logo\">\r\n                <img src={GDriveLogo} alt=\"Google Drive\" />\r\n                <span>Drive</span>\r\n            </div>\r\n            <div className=\"header__searchContainer\">\r\n                <div className=\"header__searchBar\">\r\n                    <SearchIcon />\r\n                    <input type=\"text\" placeholder='Search in Drive' />\r\n                    <ExpandMoreIcon />\r\n                </div>\r\n            </div>\r\n            <div className=\"header__icons\">\r\n                <span>\r\n                    <HelpOutlineIcon />\r\n                    <SettingsIcon />\r\n                </span>\r\n                <AppsIcon />\r\n                {/* <img src={userPhoto} alt=\"User Photo\"/> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index;\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAYCYXIbKISqkWa1UTqCK6bAU_RCtxdVzQ\",\r\n  authDomain: \"drive-clone-455a1.firebaseapp.com\",\r\n  projectId: \"drive-clone-455a1\",\r\n  storageBucket: \"drive-clone-455a1.appspot.com\",\r\n  messagingSenderId: \"810010726465\",\r\n  appId: \"1:810010726465:web:a97d5b0d5cbc81f9b1b6c0\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst auth = firebase.auth()\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nconst storage = firebase.storage()\r\nconst db = firebaseApp.firestore()\r\n\r\nfirebase.database().ref().set({\r\n  name: \"drive-clone-455a1\",\r\n})\r\n\r\n\r\nexport { auth, provider, db, storage }","import React, { useState } from 'react'\r\nimport '../../styles/NewFile.css'\r\n\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport firebase from 'firebase'\r\nimport { storage, db } from '../../firebase'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nfunction getModalStyle() {\r\n    return {\r\n        top: `50%`,\r\n        left: `50%`,\r\n        transform: `translate(-50%, -50%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nconst NewFile = () => {\r\n    const classes = useStyles();\r\n\r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n    const [file, setFile] = useState(null)\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true); \r\n       // alert(\" Uploaded Successfully\")\r\n       \r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        \r\n       \r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setFile(e.target.files[0])\r\n           \r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    const handleUpload = () => {\r\n        setUploading(true)\r\n        alert(\" Upload Image/PDF file only less than 2MB\")\r\n\r\n        storage.ref(`files/${file.name}`).put(file).then(snapshot => {\r\n            console.log(snapshot)\r\n\r\n            storage.ref('files').child(file.name).getDownloadURL().then(url => {\r\n                //post image inside the db\r\n\r\n                db.collection('myFiles').add({\r\n                    timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                    caption: file.name,\r\n                    fileUrl: url,\r\n                    size: snapshot._delegate.bytesTransferred,\r\n                    \r\n                })\r\n\r\n                setUploading(false)\r\n                setOpen(false)\r\n                setFile(null)\r\n                alert(\" Uploaded Successfully\")\r\n            })\r\n\r\n            storage.ref('files').child(file.name).getMetadata().then(meta => {\r\n                console.log(meta.size)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='newFile'>\r\n            <div className=\"newFile__container\" onClick={handleOpen}>\r\n                <AddIcon fontSize='large' />\r\n                <p>New</p>\r\n            </div>\r\n\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <div style={modalStyle} className={classes.paper}>\r\n                    <p>Select files you want to upload!</p>\r\n                    {\r\n                        uploading ? (\r\n                            <p>Uploading...</p>\r\n                        ) : (\r\n                                <>\r\n                                    <input type=\"file\" onChange={handleChange} />\r\n                                    <button onClick={handleUpload}>Upload</button>\r\n                                </>\r\n                            )\r\n                    }\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewFile\r\n","import React from 'react'\r\nimport '../../styles/SidebarItem.css'\r\n\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst SidebarItem = ({ arrow, icon, label }) => {\r\n    return (\r\n        <div className='sidebarItem'>\r\n            <div className=\"sidebarItem__arrow\">\r\n                {arrow && (<ArrowRightIcon />)}\r\n            </div>\r\n            \r\n            <div className='sidebarItem__main'>\r\n                {icon}\r\n                <p>{label}</p>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SidebarItem\r\n","import React from 'react'\r\nimport '../../styles/Sidebar.css'\r\n\r\nimport NewFile from './NewFile'\r\nimport SidebarItem from './SidebarItem';\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport ImportantDevicesIcon from '@material-ui/icons/ImportantDevices';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport StorageIcon from '@material-ui/icons/Storage';\r\n\r\nconst index = () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <NewFile />\r\n\r\n            <div className=\"sidebar__itemsContainer\">\r\n                <SidebarItem arrow icon={(<InsertDriveFileIcon />)} label={'My Drive'} />\r\n                <SidebarItem arrow icon={(<ImportantDevicesIcon />)} label={'Computers'} />\r\n                <SidebarItem icon={(<PeopleAltIcon />)} label={'Shared with me'} />\r\n                <SidebarItem icon={(<QueryBuilderIcon />)} label={'Recent'} />\r\n                <SidebarItem icon={(<StarBorderIcon />)} label={'Starred'} />\r\n                <SidebarItem icon={(<DeleteOutlineIcon />)} label={'Bin'} />\r\n                \r\n                <hr/>\r\n                \r\n                <SidebarItem icon={(<StorageIcon />)} label={'Storage'} />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default index\r\n","import React from 'react'\r\nimport '../../styles/FileItem.css'\r\nimport FileSaver from 'file-saver';\r\n\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\nconst FileItem = ({ id, caption, timestamp, fileUrl, size }) => {\r\n    const fileDate = `${timestamp?.toDate().getDate()} ${monthNames[timestamp?.toDate().getMonth() + 1]} ${timestamp?.toDate().getFullYear()}`\r\n\r\n    const getReadableFileSizeString = (fileSizeInBytes) => {\r\n        let i = -1;\r\n        const byteUnits = [' kB', ' MB', ' GB', ' TB', 'PB', 'EB', 'ZB', 'YB'];\r\n        do {\r\n            fileSizeInBytes = fileSizeInBytes / 1024;\r\n            i++;\r\n        } while (fileSizeInBytes > 1024);\r\n\r\n        return Math.max(fileSizeInBytes, 0.1).toFixed(1) + byteUnits[i];\r\n    };\r\n\r\n    const saveFile = (url) => {\r\n        FileSaver.saveAs(\r\n            process.env.PUBLIC_URL + {url},\"Untitled File\");\r\n    };\r\n\r\n    return (\r\n        <div className='fileItem'>\r\n            <a href={fileUrl} target=\"_blank\" download>\r\n                <div className=\"fileItem--left\">\r\n                    <InsertDriveFileIcon />\r\n                    <p>{caption}</p>\r\n                </div>\r\n                <div className=\"fileItem--right\">\r\n\r\n                <button className=\"cv\" onClick={saveFile}>\r\n                        Download File\r\n                    </button>\r\n\r\n                    <p>{fileDate}</p>\r\n                    \r\n                   \r\n\r\n                    <p>{getReadableFileSizeString(size)}</p>\r\n                </div>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileItem","import React from 'react'\r\nimport '../../styles/FileCard.css'\r\n\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nconst FileCard = ({ name }) => {\r\n    return (\r\n        <div className='fileCard'>\r\n            <div className=\"fileCard--top\">\r\n                <InsertDriveFileIcon style={{ fontSize: 120 }} />\r\n            </div>\r\n\r\n            <div className=\"fileCard--bottom\">\r\n                <p>{name}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileCard\r\n","  \r\nimport React, { useState, useEffect } from 'react'\r\nimport '../../styles/FilesView.css'\r\n\r\nimport FileItem from './FileItem'\r\nimport FileCard from './FileCard'\r\n\r\nimport { db } from '../../firebase'\r\n\r\nconst FilesView = () => {\r\n    const [files, setFiles] = useState([])\r\n\r\n    useEffect(() => {\r\n        db.collection('myFiles').onSnapshot(snapshot => {\r\n            setFiles(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                item: doc.data()\r\n            })))\r\n        })\r\n    }, [])\r\n\r\n    console.log(files)\r\n\r\n    return (\r\n        <div className='fileView'>\r\n            <div className=\"fileView__row\">\r\n                {\r\n                    files.slice(0, 5).map(({ id, item }) => (\r\n                        <FileCard name={item.caption} />\r\n                    ))\r\n\r\n                }\r\n            </div>\r\n            <div className=\"fileView__titles\">\r\n                <div className=\"fileView__titles--left\">\r\n                    <p>Name</p>\r\n                </div>\r\n                <div className=\"fileView__titles--right\">\r\n                    <p>Last modified</p>\r\n                    <p>File size</p>\r\n                </div>\r\n            </div>\r\n            {\r\n                files.map(({ id, item }) => (\r\n                    <FileItem id={id} caption={item.caption} timestamp={item.timestamp} fileUrl={item.fileUrl} size={item.size} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilesView","import './App.css';\r\nimport Header from './components/header'\r\nimport Sidebar from './components/sidebar'\r\nimport FilesView from './components/filesView/FilesView'\r\nimport SideIcons from './components/sideIcons'\r\n\r\nimport DriveLogo from './media/ok.png'\r\n\r\nimport { auth, provider } from \"./firebase\";\r\nimport { useState } from 'react';\r\n\r\nfunction App() {\r\n  // const [user, setUser] = useState()\r\n  const [user, setUser] = useState()\r\n\r\n  const handleLogin = () => {    // Google Authentication\r\n    if (!user) {\r\n      auth.signInWithPopup(provider).then((result) => {\r\n        setUser(result.user)\r\n        console.log(result.user)\r\n      }).catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    } else if (user) {\r\n      auth.signOut().then(() => {\r\n        setUser(null)\r\n      }).catch((err) => alert(err.message))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {\r\n        user ? (\r\n          <>\r\n            <Header userPhoto={user.photoURL} />\r\n            <div className=\"app__main\">\r\n              <Sidebar />\r\n              <FilesView />\r\n              {/* <SideIcons /> */}\r\n            </div>\r\n          </>\r\n        ) : (\r\n            <div className='app__login'>\r\n              <img src={DriveLogo} alt=\"Drive\" />\r\n              <button onClick={handleLogin}>Log in to Drive</button>\r\n            </div>\r\n          )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}